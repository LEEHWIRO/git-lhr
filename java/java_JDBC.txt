/*
		 * JDBC(Java Database Connectivity)
		 * - 자바와 데이터베이스를 연결해주는 라이브러리
		 * - ojdbc : 오라클 JDBC
		 * 
		 * JDBC 작성 단계
		 * 1. Connection 생성(DB 연결)
		 * 2. Statement 생성(쿼리 작성)
		 * 3. Query 실행
		 * 4. ResultSet에서 결고 추출(select인 경우)
		 * 5. ResultSet, Statement, Connection 닫기
		 */

//데이터베이스 접속 정보
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String user = "pc16";
		String password = "java";

		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
//방법 1.
try {
			//DriverManager : 데이터베이스에 접속하기 위한 드라이버를 관리해주는 클래스
			con = DriverManager.getConnection(url, user, password);

			String sql = "select * from member";
			ps = con.prepareStatement(sql);

			//select
			rs = ps.executeQuery();

			//insert, update, delete
//			int result = ps.executeUpdate(); //몇개의 row가 영향을 받았는지 변환해준다.

			while(rs.next()){//****
				System.out.println(rs.getString(1));
				System.out.println(rs.getString("MEM_NAME"));

//				rs.getInt(1);
//				rs.getDate(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally{
			if(rs != null) try{ rs.close();} catch(Exception e) {}
			if(ps != null) try{ ps.close();} catch(Exception e) {}
			if(con != null) try{ con.close();} catch(Exception e) {}

		}

//방법2.
try {
			con = DriverManager.getConnection(url,user, password);

			String sql = "select * from cart where cart_member like = ?"; // where절 LIKE문 쓰는법 : '%' || ? || '%'
			ps = con.prepareStatement(sql);
			ps.setString(1, "a001");
//			ps.setInt(parameterIndex, x);
//			ps.setDate(parameterIndex, x);
//			ps.setObject(parameterIndex, x);

			rs = ps.executeQuery();

			ResultSetMetaData md = rs.getMetaData(); //메타데이터 : 데이터에 대한 데이터

			int ColumnCount = md.getColumnCount();

			while(rs.next()){
				for(int i = 1; i <= ColumnCount; i++){
//					System.out.print(md.getColumnName(i) + " : ");
					Object value = rs.getObject(i);
					System.out.print(value + "\t");
				}
				System.out.println();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally{
			if(rs != null) try{ rs.close();} catch(Exception e) {}
			if(ps != null) try{ ps.close();} catch(Exception e) {}
			if(con != null) try{ con.close();} catch(Exception e) {}
		}


--SYSDBA 접속
sqlplus sys/java@192.168.43.174:1521 as sysdba

--사용자 생성
create user admin identified by java;

--사용자 권한 부여
grant connect, resource to admin;

--테이블 생성

/* Drop Tables */

DROP TABLE ADD_INGR CASCADE CONSTRAINTS;
DROP TABLE INFO_ORDER CASCADE CONSTRAINTS;
DROP TABLE ORDER CASCADE CONSTRAINTS;
DROP TABLE BUYER CASCADE CONSTRAINTS;
DROP TABLE CART_ADD_INGR CASCADE CONSTRAINTS;
DROP TABLE CART CASCADE CONSTRAINTS;
DROP TABLE EVENT CASCADE CONSTRAINTS;
DROP TABLE INGR CASCADE CONSTRAINTS;
DROP TABLE INQUIRY CASCADE CONSTRAINTS;
DROP TABLE NOTICE CASCADE CONSTRAINTS;
DROP TABLE MANAGER CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE MENU CASCADE CONSTRAINTS;




/* Create Tables */

CREATE TABLE ADD_INGR
(
	-- 추가 재료 번호
	ADD_INGR_NO number NOT NULL,
	INFO_ORDER_NO number NOT NULL,
	-- 소스번호
	-- 빵번호
	-- 야채번호
	INGR_NO varchar2(50) NOT NULL,
	PRIMARY KEY (ADD_INGR_NO)
);


CREATE TABLE BUYER
(
	-- 가맹점 번호
	BUYER_ID varchar2(100) NOT NULL,
	-- 가맹점 비밀번호
	BUYER_PW varchar2(100),
	-- 가맹점 이름
	BUYER_NAME varchar2(50),
	-- 가맹점 전화 번호
	BUYER_COMTEL varchar2(20),
	-- 가맹점 우편 번호
	BUYER_ZIP varchar2(10),
	-- 가맹점 주소
	BUYER_ADD varchar2(100),
	PRIMARY KEY (BUYER_ID)
);


CREATE TABLE CART
(
	CART_NO number NOT NULL,
	-- 회원ID
	MEM_ID varchar2(100) NOT NULL,
	-- 메뉴 분류 코드 작성 영역 시퀀스로 처리
	-- 
	MENU_NO number NOT NULL,
	CART_QTY number,
	PRIMARY KEY (CART_NO)
);


CREATE TABLE CART_ADD_INGR
(
	-- 장바구니 추가 재료 코드
	CART_ADD_NO number NOT NULL,
	-- 소스번호
	-- 빵번호
	-- 야채번호
	INGR_NO varchar2(50) NOT NULL,
	CART_NO number NOT NULL,
	PRIMARY KEY (CART_ADD_NO)
);


CREATE TABLE EVENT
(
	-- 이벤트 번호를 입력하는 영역
	EVENT_ID number NOT NULL,
	-- 관리자 아이디
	MANAGER_ID varchar2(100) NOT NULL,
	-- 이벤트 제목을 입력함.
	EVENT_TITLE varchar2(200) NOT NULL,
	-- 이벤트 시작 날짜 설정
	EVENT_STARTDATE date,
	-- 이벤트 종료 날짜 작성
	EVENT_ENDDATE date,
	-- 이벤트 내용을 작성하는 컬럼
	EVENT_CONTENTS varchar2(4000) NOT NULL,
	-- 이벤트 작성 일자
	EVENT_REG_DATE timestamp,
	PRIMARY KEY (EVENT_ID)
);


CREATE TABLE INFO_ORDER
(
	INFO_ORDER_NO number NOT NULL,
	-- 메뉴 분류 코드 작성 영역 시퀀스로 처리
	-- 
	MENU_NO number NOT NULL,
	ORDER_NO varchar2(50) NOT NULL,
	INFO_CART_QTY number,
	PRIMARY KEY (INFO_ORDER_NO)
);


CREATE TABLE INGR--
(
	-- 소스번호
	-- 빵번호
	-- 야채번호
	INGR_NO varchar2(50) NOT NULL,
	INGR_GU varchar2(50),
	-- 빵이름
	-- 소스이름
	INGR_NAME varchar2(100),
	PRIMARY KEY (INGR_NO)
);


CREATE TABLE INQUIRY
(
	-- 1대1 문의번호
	-- 시퀀스로 작업 예정
	INQUIRY_NO number NOT NULL,
	-- 문의 제목 작성
	INQUIRY_TITLE varchar2(500) NOT NULL,
	-- 문의한 사용자의 이메일
	INQUIRY_EMAIL varchar2(60) NOT NULL,
	-- 연락 가능한 전화번호
	INQUIRY_COMETL varchar2(20) NOT NULL,
	-- 내용
	INQUIRY_CONTENT varchar2(4000) NOT NULL,
	-- 문의 작성 일자
	INQUIRY_REG_DATE timestamp,
	PRIMARY KEY (INQUIRY_NO)
);


CREATE TABLE MANAGER
(
	-- 관리자 아이디
	MANAGER_ID varchar2(100) NOT NULL,
	-- 관리자 비밀번호
	MANAGER_PW varchar2(100),
	-- 관리자 이름
	MANAGER_NAME varchar2(50),
	PRIMARY KEY (MANAGER_ID)
);


CREATE TABLE MEMBER
(
	-- 회원ID
	MEM_ID varchar2(100) NOT NULL,
	-- 비밀번호
	MEM_PW varchar2(100),
	-- 회원명
	MEM_NM varchar2(50),
	-- 생년월일
	MEM_REG_F varchar2(20),
	-- 회원 전화 번호
	MEM_NUMBER varchar2(20),
	-- 회원 우편 번호를 입력할 컬럼
	MEMBER_ZIP varchar2(10),
	-- 회원 주소를 입력할 영역
	MEMBER_ADD varchar2(1000),
	PRIMARY KEY (MEM_ID)
);

drop table menu cascade constraint;

CREATE TABLE MENU
(
	-- 메뉴 분류 코드 시퀀스 작성
	MENU_NO_SEQ number NOT NULL,
    --메뉴 분류 작성
    MENU_GU varchar2(20),
    -- 메뉴 분류 시퀀스
    MENU_GU_SEQ number, 
    
	-- 메뉴 이름 작성
	MENU_NM varchar2(200),
	-- 메뉴 재료 작성
	MENU_INGR varchar2(4000),
	MENU_PRICE number,
	PRIMARY KEY (MENU_NO_SEQ)
);

DROP TABLE menu CASCADE CONSTRAINT;

rollback;
CREATE TABLE NOTICE
(
	-- 공지사항 번호 작성 시퀀스로 처리
	NOTICE_NO number NOT NULL,
	-- 관리자 아이디
	MANAGER_ID varchar2(100) NOT NULL,
	-- 공지사항 제목 작성
	NOTICE_TITLE varchar2(200),
	-- 공지 내용을 작성
	NOTICE_CONTENTS varchar2(4000),
	-- 공지 작성 일자
	NOTICE_REG_DATE timestamp,
	-- 상단에 노출할 중요 공지사항 코드
	-- 0 인 경우, 상단 노출 안함 
	-- 1 인 경우, 상단 노출 함
	NOTICE_IMPOR_CODE varchar2(5),
	PRIMARY KEY (NOTICE_NO)
);


CREATE TABLE ORDERS
(
	ORDER_NO varchar2(50) NOT NULL,
	-- 가맹점 번호
	BUYER_ID varchar2(100) NOT NULL,
	-- 회원ID
	MEM_ID varchar2(100) NOT NULL,
	ORDER_PRICE number,
	-- 고객 주문 날짜
	ORDER_MEMBER_DATE timestamp,
	-- 가맹점 확인 시간
	ORDER_BUYER_CHOICE timestamp,
	PRIMARY KEY (ORDER_NO)
);



/* Create Foreign Keys */

ALTER TABLE ORDER
	ADD FOREIGN KEY (BUYER_ID)
	REFERENCES BUYER (BUYER_ID)
;


ALTER TABLE CART_ADD_INGR
	ADD FOREIGN KEY (CART_NO)
	REFERENCES CART (CART_NO)
;


ALTER TABLE ADD_INGR
	ADD FOREIGN KEY (INFO_ORDER_NO)
	REFERENCES INFO_ORDER (INFO_ORDER_NO)
;


ALTER TABLE ADD_INGR
	ADD FOREIGN KEY (INGR_NO)
	REFERENCES INGR (INGR_NO)
;


ALTER TABLE CART_ADD_INGR
	ADD FOREIGN KEY (INGR_NO)
	REFERENCES INGR (INGR_NO)
;


ALTER TABLE EVENT
	ADD FOREIGN KEY (MANAGER_ID)
	REFERENCES MANAGER (MANAGER_ID)
;


ALTER TABLE NOTICE
	ADD FOREIGN KEY (MANAGER_ID)
	REFERENCES MANAGER (MANAGER_ID)
;


ALTER TABLE CART
	ADD FOREIGN KEY (MEM_ID)
	REFERENCES MEMBER (MEM_ID)
;


ALTER TABLE ORDERS
	ADD FOREIGN KEY (MEM_ID)
	REFERENCES MEMBER (MEM_ID)
;


ALTER TABLE CART
	ADD FOREIGN KEY (MENU_NO)
	REFERENCES MENU (MENU_NO_SEQ)
;


ALTER TABLE INFO_ORDER
	ADD FOREIGN KEY (MENU_NO)
	REFERENCES MENU (MENU_NO_SEQ)
;


ALTER TABLE INFO_ORDER
	ADD FOREIGN KEY (ORDER_NO)
	REFERENCES ORDER (ORDER_NO)
;



/* Comments */

COMMENT ON COLUMN ADD_INGR.ADD_INGR_NO IS '추가 재료 번호';
COMMENT ON COLUMN ADD_INGR.INGR_NO IS '소스번호
빵번호
야채번호';
COMMENT ON COLUMN BUYER.BUYER_ID IS '가맹점 번호';
COMMENT ON COLUMN BUYER.BUYER_PW IS '가맹점 비밀번호';
COMMENT ON COLUMN BUYER.BUYER_NAME IS '가맹점 이름';
COMMENT ON COLUMN BUYER.BUYER_COMTEL IS '가맹점 전화 번호';
COMMENT ON COLUMN BUYER.BUYER_ZIP IS '가맹점 우편 번호';
COMMENT ON COLUMN BUYER.BUYER_ADD IS '가맹점 주소';
COMMENT ON COLUMN CART.MEM_ID IS '회원ID';
COMMENT ON COLUMN CART.MENU_NO IS '메뉴 분류 코드 작성 영역 시퀀스로 처리
';
COMMENT ON COLUMN CART_ADD_INGR.CART_ADD_NO IS '장바구니 추가 재료 코드';
COMMENT ON COLUMN CART_ADD_INGR.INGR_NO IS '소스번호
빵번호
야채번호';
COMMENT ON COLUMN EVENT.EVENT_ID IS '이벤트 번호를 입력하는 영역';
COMMENT ON COLUMN EVENT.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN EVENT.EVENT_TITLE IS '이벤트 제목을 입력함.';
COMMENT ON COLUMN EVENT.EVENT_STARTDATE IS '이벤트 시작 날짜 설정';
COMMENT ON COLUMN EVENT.EVENT_ENDDATE IS '이벤트 종료 날짜 작성';
COMMENT ON COLUMN EVENT.EVENT_CONTENTS IS '이벤트 내용을 작성하는 컬럼';
COMMENT ON COLUMN EVENT.EVENT_REG_DATE IS '이벤트 작성 일자';
COMMENT ON COLUMN INFO_ORDER.MENU_NO IS '메뉴 분류 코드 작성 영역 시퀀스로 처리
';
COMMENT ON COLUMN INGR.INGR_NO IS '소스번호
빵번호
야채번호';
COMMENT ON COLUMN INGR.INGR_NAME IS '빵이름
소스이름';
COMMENT ON COLUMN INQUIRY.INQUIRY_NO IS '1대1 문의번호
시퀀스로 작업 예정';
COMMENT ON COLUMN INQUIRY.INQUIRY_TITLE IS '문의 제목 작성';
COMMENT ON COLUMN INQUIRY.INQUIRY_EMAIL IS '문의한 사용자의 이메일';
COMMENT ON COLUMN INQUIRY.INQUIRY_COMETL IS '연락 가능한 전화번호';
COMMENT ON COLUMN INQUIRY.INQUIRY_CONTENT IS '내용';
COMMENT ON COLUMN INQUIRY.INQUIRY_REG_DATE IS '문의 작성 일자';
COMMENT ON COLUMN MANAGER.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN MANAGER.MANAGER_PW IS '관리자 비밀번호';
COMMENT ON COLUMN MANAGER.MANAGER_NAME IS '관리자 이름';
COMMENT ON COLUMN MEMBER.MEM_ID IS '회원ID';
COMMENT ON COLUMN MEMBER.MEM_PW IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEM_NM IS '회원명';
COMMENT ON COLUMN MEMBER.MEM_REG_F IS '생년월일';
COMMENT ON COLUMN MEMBER.MEM_NUMBER IS '회원 전화 번호';
COMMENT ON COLUMN MEMBER.MEMBER_ZIP IS '회원 우편 번호를 입력할 컬럼';
COMMENT ON COLUMN MEMBER.MEMBER_ADD IS '회원 주소를 입력할 영역';
COMMENT ON COLUMN MENU.MENU_NO IS '메뉴 분류 코드 작성';
COMMENT ON COLUMN MENU.MENU_NM IS '메뉴 이름 작성';
COMMENT ON COLUMN MENU.MENU_INGR IS '메뉴 재료 작성';
COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항 번호 작성 시퀀스로 처리';
COMMENT ON COLUMN NOTICE.MANAGER_ID IS '관리자 아이디';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지사항 제목 작성';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENTS IS '공지 내용을 작성';
COMMENT ON COLUMN NOTICE.NOTICE_REG_DATE IS '공지 작성 일자';
COMMENT ON COLUMN NOTICE.NOTICE_IMPOR_CODE IS '상단에 노출할 중요 공지사항 코드
0 인 경우, 상단 노출 안함 
1 인 경우, 상단 노출 함';
COMMENT ON COLUMN ORDER.BUYER_ID IS '가맹점 번호';
COMMENT ON COLUMN ORDER.MEM_ID IS '회원ID';
COMMENT ON COLUMN ORDER.ORDER_MEMBER_DATE IS '고객 주문 날짜';
COMMENT ON COLUMN ORDER.ORDER_BUYER_CHOICE IS '가맹점 확인 시간';




-- 시퀀스 생성
drop sequence MENU_NO_SEQ;
--[메뉴 테이블]메뉴 번호 시퀀스
CREATE SEQUENCE MENU_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[메뉴 테이블]분류_샌드위치 번호 시퀀스
CREATE SEQUENCE MENU_SD_SEQ
INCREMENT BY 1
START WITH 1;
--[메뉴 테이블]분류_랩 번호 시퀀스
CREATE SEQUENCE MENU_WR_SEQ
INCREMENT BY 1
START WITH 1;
--[메뉴 테이블]분류_샐러드 번호 시퀀스
CREATE SEQUENCE MENU_SL_SEQ
INCREMENT BY 1
START WITH 1;
--[장바구니 추가 재료 테이블]장바구니 추가 재료 코드 시퀀스
CREATE SEQUENCE CART_ADD_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[추가 재료 테이블] 추가 재료 번호 시퀀스
CREATE SEQUENCE ADD_INGR_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[주문 정보 테이블] 주문 정보 번호 시퀀스
CREATE SEQUENCE INFO_ORDER_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[장바구니 테이블] 장바구니번호 시퀀스
CREATE SEQUENCE CART_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[1:1문의 테이블] 문의 번호 시퀀스
CREATE SEQUENCE INQUIRY_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[공지사항 테이블] 공지사항 번호 시퀀스
CREATE SEQUENCE NOTICE_NO_SEQ
INCREMENT BY 1
START WITH 1;
--[이벤트 테이블] 이벤트 번호 시퀀스
CREATE SEQUENCE EVENT_ID_SEQ
INCREMENT BY 1
START WITH 1;


--시퀀스 번호 증가
INSERT INTO TESTSEQ(TS_ID, TS_NAME) 
VALUES(TESTSEQ_SEQ.NEXTVAL,'글3');


SELECT * FROM MANAGER;
INSERT INTO MANAGER(MANAGER_ID,MANAGER_PW,MANAGER_NAME) VALUES('ADMIN','JAVA','관리자'); 





-- 데모데이터 입력 시작---------------------------------------------------------------------
INSERT INTO MENU (MENU_NO_SEQ, MENU_GU, MENU_GU_SEQ, MENU_NM, MENU_INGR,MENU_PRICE)
    VALUES (MENU_NO_SEQ.NEXTVAL, 'SD', MENU_SD_SEQ.NEXTVAL, '에그마요 베이컨', '에그마요 2스쿱 / 치즈 2장 / 베이컨 2장', 4800) ;
INSERT INTO MENU (MENU_NO_SEQ, MENU_GU, MENU_GU_SEQ, MENU_NM, MENU_INGR,MENU_PRICE)
    VALUES (MENU_NO_SEQ.NEXTVAL, 'SD', MENU_SD_SEQ.NEXTVAL, '에그마요 페퍼로니', '에그마요 2스쿱 / 치즈 2장 / 페퍼로니 2장', 4800);
INSERT INTO MENU (MENU_NO_SEQ, MENU_GU, MENU_GU_SEQ, MENU_NM, MENU_INGR,MENU_PRICE)
    VALUES (MENU_NO_SEQ.NEXTVAL, 'WR', MENU_WR_SEQ.NEXTVAL, '쉬림프 에그 그릴드 랩', '새우 4마리 / 에그지단 / 슈레드 치즈 1스쿱 / 스위트 칠리 1줄 / 랜치 1줄', 5000);
INSERT INTO MENU (MENU_NO_SEQ, MENU_GU, MENU_GU_SEQ, MENU_NM, MENU_INGR,MENU_PRICE)
    VALUES (MENU_NO_SEQ.NEXTVAL, 'WR', MENU_WR_SEQ.NEXTVAL, '스테이크 , 치즈 아보카도 그릴드 랩', '스테이크 1스쿱 / 아보카도 1스쿱 / 슈레드 치즈 1스쿱 / 모차렐라 치즈 1스쿱 / 마요네즈 1줄', 5700);
INSERT INTO MENU (MENU_NO_SEQ, MENU_GU, MENU_GU_SEQ, MENU_NM, MENU_INGR,MENU_PRICE)
    VALUES (MENU_NO_SEQ.NEXTVAL, 'SL', MENU_SL_SEQ.NEXTVAL, '써브웨이 클럽', '터키 2장 / 햄 1장 / 로스트 비프 1장 / 치즈 2장', 5800);
INSERT INTO MENU (MENU_NO_SEQ, MENU_GU, MENU_GU_SEQ, MENU_NM, MENU_INGR,MENU_PRICE)
    VALUES (MENU_NO_SEQ.NEXTVAL, 'SL', MENU_SL_SEQ.NEXTVAL, '이탈리안 비엠티', '페퍼로니 3장 / 살라미 3장 / 햄 2장 / 치즈 2장', 6200);
    
SELECT *
FROM MENU;

INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('B001', 'BRE', '화이트');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('B002', 'BRE', '파마산');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('C001', 'CHE', '아메리칸');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('C002', 'CHE', '슈레드');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('V001', 'VEG', '양상추');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('V002', 'VEG', '토마토');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('S001', 'SOR', '머스타드');
INSERT INTO INGR (INGR_NO, INGR_GU, INGR_NAME)
    VALUES ('S002', 'SOR', '칠리');

SELECT *
FROM INGR;

INSERT INTO BUYER (BUYER_ID, BUYER_PW, BUYER_NAME,BUYER_COMTEL,BUYER_ZIP, BUYER_ADD)
    VALUES ('DEMOBUYER1', 'JAVA', '써브웨이 대전둔산점', '042-488-5200', '52315','대전 서구 둔산로 18 향촌월드프라자');
INSERT INTO BUYER (BUYER_ID, BUYER_PW, BUYER_NAME,BUYER_COMTEL,BUYER_ZIP, BUYER_ADD)
    VALUES ('DEMOBUYER2', 'JAVA', '써브웨이 대전시청점', '042-424-5040', '12315','대전 서구 둔산로 130 1층 111호');
INSERT INTO BUYER (BUYER_ID, BUYER_PW, BUYER_NAME,BUYER_COMTEL,BUYER_ZIP, BUYER_ADD)
    VALUES ('DEMOBUYER3', 'JAVA', '써브웨이 대전관저점', '042-788-5550', '42315','대전 서구 관저로 142');
    
SELECT *
FROM BUYER;

INSERT INTO INQUIRY (INQUIRY_NO,INQUIRY_TITLE, INQUIRY_EMAIL, INQUIRY_COMETL,INQUIRY_CONTENT, INQUIRY_REG_DATE)
    VALUES (INQUIRY_NO_SEQ.NEXTVAL, '서브웨이를 세종에 오픈하고 싶습니다. 가맹 승인 조건에는 어떤 것이 있나요?', 'SUFN21@gmail.com', '010-5548-3731', '서브웨이를 세종에 오픈하고 싶습니다. 가맹 승인 조건에는 어떤 것이 있나요?', SYSDATE);
INSERT INTO INQUIRY (INQUIRY_NO,INQUIRY_TITLE, INQUIRY_EMAIL, INQUIRY_COMETL,INQUIRY_CONTENT, INQUIRY_REG_DATE)
    VALUES (INQUIRY_NO_SEQ.NEXTVAL, '오늘 풀드포크 먹고 집에 갔는데 배가 너무 아팠습니다. 제 번호 연락 주세요.', 'APAYO999@naver.com', '010-7587-2214', '서브웨이 먹고 배가 너무 아팠는데 보상해주세요. 제 번호 연락주세요', SYSDATE);
INSERT INTO INQUIRY (INQUIRY_NO,INQUIRY_TITLE, INQUIRY_EMAIL, INQUIRY_COMETL,INQUIRY_CONTENT, INQUIRY_REG_DATE)
    VALUES (INQUIRY_NO_SEQ.NEXTVAL, '민트초코쿠키 먹고 싶어요!! 추가해 주세요.', 'SUFN21@gmail.com', '010-5548-3731', '민트초코쿠키 먹고싶어요. 추가해주세요.', SYSDATE);
    
SELECT *
FROM INQUIRY;
--------------------------------------------------------------데모데이터 입력 끝







INSERT INTO MEMBER(MEM_ID, MEM_PW, MEM_NM, MEM_REGNO, 
                   MEM_NUMBER, MEMBER_ZIP, MEMBER_ADD)
            VALUES('DEMOMEMBER1', 'JAVA', '회원1', '95/01/20',
                   '01047243957', '34939','대전시 중구 중앙로 76 영민빌딩 4층');
INSERT INTO MEMBER(MEM_ID, MEM_PW, MEM_NM, MEM_REGNO, 
                   MEM_NUMBER, MEMBER_ZIP, MEMBER_ADD)
            VALUES('DEMOMEMBER2', 'JAVA', '회원2', '93/11/30',
                   '01010894803', '35232','대전시 서구 둔산로 100');
INSERT INTO MEMBER(MEM_ID, MEM_PW, MEM_NM, MEM_REGNO, 
                   MEM_NUMBER, MEMBER_ZIP, MEMBER_ADD)
            VALUES('DEMOMEMBER3', 'JAVA', '회원3', '99/08/10',
                   '01089014626', '86573','서울시 서초구 서초동 산144-4');
COMMIT;

--주문 테이블 데모데이터 삽입
INSERT INTO ORDERS(ORDER_NO, BUYER_ID, MEM_ID, ORDER_PRICE, ORDER_MEMBER_DATE, ORDER_BUYER_CHOICE)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDDHHMISS'),'DEMOBUYER1', 'DEMOMEMBER1', 10000, SYSDATE, SYSDATE
);

--주문 정보번호 테이블 데모 데이터 삽입
INSERT INTO INFO_ORDER(INFO_ORDER_NO, MENU_NO, ORDER_NO, INFO_CART_QTY) VALUES(INFO_ORDER_NO_SEQ.NEXTVAL,7,'20210222044802',2);

select * from MANAGER where MANAGER_ID = 'ADMIN' and MANAGER_PW = 'JAVA';

SELECT * FROM ORDERS;

INSERT INTO ORDERS(ORDER_NO, BUYER_ID, MEM_ID, ORDER_PRICE, ORDER_MEMBER_DATE, ORDER_BUYER_CHOICE)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDDHHMISS'),'DEMOBUYER1', 'DEMOMEMBER1', 10000, SYSDATE, SYSDATE
);

INSERT INTO INFO_ORDER(INFO_ORDER_NO, MENU_NO, ORDER_NO, INFO_CART_QTY) VALUES(INFO_ORDER_NO_SEQ.NEXTVAL,7,'20210222044802',2);

INSERT INTO ADD_INGR(ADD_INGR_NO, INFO_ORDER_NO, INGR_NO) VALUES(ADD_INGR_NO_SEQ.NEXTVAL,1,'B001');
INSERT INTO ADD_INGR(ADD_INGR_NO, INFO_ORDER_NO, INGR_NO) VALUES(ADD_INGR_NO_SEQ.NEXTVAL,1,'C001');
INSERT INTO ADD_INGR(ADD_INGR_NO, INFO_ORDER_NO, INGR_NO) VALUES(ADD_INGR_NO_SEQ.NEXTVAL,1,'V001');
INSERT INTO ADD_INGR(ADD_INGR_NO, INFO_ORDER_NO, INGR_NO) VALUES(ADD_INGR_NO_SEQ.NEXTVAL,1,'S001');


-----------------------------------------------------------------------------데모데이터 입력 끝

--[주문번호, 가맹점명, 메뉴이름, 재료(선택), 수량, 주문일(회원), 주문일(가맹점 확인)]
--[ORDERS.ORDER_NO, BUYER.BUYER_NAME, INFO_ORDER.MENU_NO, ADD_INGR.INGR_NO, INFO_ORDER.INFO_CART_QTY, ORDERS.ORDER_MEMBER_DATE, ORDERS.ORDER_BUYER_CHOICE]
--필요 테이블 : ORDERS, BUYER, INFO_ORDER, ADD_INGR
--조인 조건 : ORDERS.BUYER_ID = BUYER.BUYER_ID / INFO_ORDER.INFO_ORDER_NO = ADD_INGR.INFO_ORDER_NO / INFO_ORDER.ORDER_NO = ORDERS.ORDER_NO / ADD_INGR.INGR_NO = INGR.INGR_NO
--출력예상 
--1)[20210222044802, 써브웨이 대전둔산점, 7, 화이트, 2,21/02/22 16:48:02, 21/02/22 16:48:02]
--2)[20210222044802, 써브웨이 대전둔산점, 7, 아메리칸, 2,21/02/22 16:48:02, 21/02/22 16:48:02]
--3)[20210222044802, 써브웨이 대전둔산점, 7, 양상추, 2,21/02/22 16:48:02, 21/02/22 16:48:02]
--4)[20210222044802, 써브웨이 대전둔산점, 7, 머스타드, 2,21/02/22 16:48:02, 21/02/22 16:48:02]

--1. ORDERS 와 BUYER 테이블 조인 : 필요 컬럼 : 주문번호(ORDER_NO), 거래처 명(BUYER_NAME) : 결과 : [20210222044802, 써브웨이 대전둔산점]
SELECT * FROM ORDERS;
SELECT * FROM BUYER;
SELECT A.ORDER_NO, B.BUYER_NAME FROM ORDERS A INNER JOIN BUYER B ON(A.BUYER_ID = B.BUYER_ID);
--2. INFO_ORDER 와 ADD_INGR 테이블 조인 : 필요 컬럼 : 메뉴이름(MENU_NO), 재료(선택)ID(INGR_NO) : 결과 : [7, B001] [7, C001] [7, V001] [7, S001]   
SELECT A.MENU_NO, B.INGR_NO FROM INFO_ORDER A INNER JOIN ADD_INGR B ON(A.INFO_ORDER_NO = B.INFO_ORDER_NO);
--3. ORDERS 와 INFO_ORDER 테이블 조인 : 필요 컬럼 : 수량(INFO_CART_QTY), 고객 주문일(ORDER_MEMBER_DATE), 가맹점 주문일(ORDER_BUYER_CHOICE) : 결과 : [2,21/02/22 16:48:02, 21/02/22 16:48:02]
SELECT B.INFO_CART_QTY, A.ORDER_MEMBER_DATE, A.ORDER_BUYER_CHOICE FROM ORDERS A INNER JOIN INFO_ORDER B ON(A.ORDER_NO = B.ORDER_NO);
--4. ADD_INGR 과 INGR 테이블 조인 : 필요 컬럼 : 재료 이름(INGR_NAME) : 결과 : [화이트,아메리칸,양상추,머스타드]
SELECT B.INGR_NAME FROM ADD_INGR A INNER JOIN INGR B ON(A.INGR_NO = B.INGR_NO);
-- 합치기
SELECT  A.ORDER_NO,            --주문번호 
        B.BUYER_NAME    가맹점명,            --가맹점명
        F.MENU_NM       메뉴이름,            --메뉴번호
        E.INGR_NAME     재료이름,            --재료이름
        C.INFO_CART_QTY 수량,                --수량
        TO_CHAR(A.ORDER_MEMBER_DATE,'YYYY-MM-DD HH:MI:SS') 고객주문일,       --고객주문일
        TO_CHAR(A.ORDER_BUYER_CHOICE,'YYYY-MM-DD HH:MI:SS') 가맹점주문일     --가맹점주문일
FROM ORDERS A   INNER JOIN BUYER B      ON(A.BUYER_ID = B.BUYER_ID)
                INNER JOIN INFO_ORDER C ON(A.ORDER_NO = C.ORDER_NO)
                INNER JOIN ADD_INGR D   ON(C.INFO_ORDER_NO = D.INFO_ORDER_NO)
                INNER JOIN INGR E       ON(D.INGR_NO = E.INGR_NO)
                INNER JOIN MENU F       ON(C.MENU_NO = F.MENU_NO)
;




----NOTICE
SELECT * FROM NOTICE;
INSERT INTO NOTICE(NOTICE_NO, MANAGER_ID, NOTICE_TITLE, NOTICE_CONTENTS, NOTICE_REG_DATE, NOTICE_IMPOR_CODE)
VALUES(NOTICE_NO_SEQ.NEXTVAL, 'ADMIN', '써브웨이 고객센터 2021년 설 연휴 휴무 안내', '서브웨이 고객센터 2월11일(목)~ 2월 14일(일)까지 중단됩니다.', SYSDATE, 1);
INSERT INTO NOTICE(NOTICE_NO, MANAGER_ID, NOTICE_TITLE, NOTICE_CONTENTS, NOTICE_REG_DATE, NOTICE_IMPOR_CODE)
VALUES(NOTICE_NO_SEQ.NEXTVAL, 'ADMIN', '개인정보 처리방침 개정안내',
'개인정보 처리방침이 개정되어, 변경내용을 안내 드립니다.' || chr(10) || 
'본 개정에 동의하지 않으시는 경우 거부의사 표시(회원탈퇴)를 하실 수 있으며,' || chr(10) ||
'거부의사를 표시하지 않으신 경우 개정에 동의하신 것으로 간주됩니다.', SYSDATE, 1);
INSERT INTO NOTICE(NOTICE_NO, MANAGER_ID, NOTICE_TITLE, NOTICE_CONTENTS, NOTICE_REG_DATE, NOTICE_IMPOR_CODE)
VALUES(NOTICE_NO_SEQ.NEXTVAL, 'ADMIN', '서브웨이 가격 인상 안내',
'에그마요 샐러드 가격이 5800 -> 6000원으로 인상됩니다.', SYSDATE, 0);
INSERT INTO NOTICE(NOTICE_NO, MANAGER_ID, NOTICE_TITLE, NOTICE_CONTENTS, NOTICE_REG_DATE, NOTICE_IMPOR_CODE)
VALUES(NOTICE_NO_SEQ.NEXTVAL, 'ADMIN', '서브웨이 이용방법♥',
'STEP 1. 메뉴 선택' || chr(10) || 
'       메뉴를 고르세요! 샌드위치, 랩, 샐러드 중 선택 가능합니다!' || chr(10) ||
'STEP 2. 빵 선택(샐러드 선택 시 제외)' || chr(10) || 
'       매장에서 직접 구운 2가지 종류 중 고객님이 원하는 빵으로 추가가 가능합니다!' || chr(10) ||
'STEP 3. 치즈,야채,소스 선택' || chr(10) || 
'       나만의 스타일을 완성하는 단계!' || chr(10) ||
'       원하는 야채를 더하고 오늘의 기분에 맞는 소스를 선택해 주세요!'
, SYSDATE, 1);
--notice select All
SELECT * FROM NOTICE WHERE NOTICE_IMPOR_CODE = 0 ORDER BY NOTICE_REG_DATE;
SELECT * FROM NOTICE WHERE NOTICE_IMPOR_CODE = 1 ORDER BY NOTICE_REG_DATE;
--notice select 
SELECT * FROM NOTICE WHERE NOTICE_NO = 1;


--notice 등록 ( 작은 따옴표 있는 경우 )
INSERT INTO NOTICE(NOTICE_NO, MANAGER_ID, NOTICE_TITLE, NOTICE_CONTENTS, NOTICE_REG_DATE, NOTICE_IMPOR_CODE) 
VALUES(NOTICE_NO_SEQ.NEXTVAL, 'ADMIN', '''안녕''', '''안녕''', SYSDATE, 0);

--NOTICE 수정
UPDATE NOTICE SET NOTICE_TITLE = '공지등록테스트1', NOTICE_CONTENTS = '공지등록테스트2', NOTICE_IMPOR_CODE = 1 WHERE NOTICE_NO = 4;

--NOTICE 삭제
DELETE FROM NOTICE WHERE NOTICE_NO = 5;


--event insert demodata
SELECT * FROM MENU;
INSERT INTO EVENT(EVENT_ID, MANAGER_ID, EVENT_TITLE, EVENT_STARTDATE, EVENT_ENDDATE, EVENT_CONTENTS, EVENT_REG_DATE)
VALUES(EVENT_ID_SEQ.NEXTVAL, 'ADMIN', 
'써브웨이 에그마요 2종!', '2021/01/04', '2021/03/01', '에그마요 2종으로 맛있게 시작!' || chr(10) || 
'에그마요 베이컨 4800원 -> 할인가. 4400원!' || chr(10) || 
'에그마요 페퍼로니 4800원 -> 할인가. 4400원!', SYSDATE);
INSERT INTO EVENT(EVENT_ID, MANAGER_ID, EVENT_TITLE, EVENT_STARTDATE, EVENT_ENDDATE, EVENT_CONTENTS, EVENT_REG_DATE)
VALUES(EVENT_ID_SEQ.NEXTVAL, 'ADMIN', 
'샐러드 2종으로 맛있게 시작!', '2020/01/04', '2020/03/01', '샐러드 2종으로 건강을 챙기자!' || chr(10) || 
'써브웨이 클럽 5800원 -> 할인가. 5400원!' || chr(10) || 
'이탈리안 비엠티 6800원 -> 할인가. 6400원!', SYSDATE);




--event selectAll
--[이벤트 번호, 이벤트 제목, 이벤트 시작날짜, 이벤트 종료 날짜]
SELECT EVENT_ID, EVENT_TITLE, TO_CHAR(EVENT_STARTDATE,'YYYY-MM-DD') AS EVENT_STARTDATE, TO_CHAR(EVENT_ENDDATE,'YYYY-MM-DD') AS EVENT_ENDDATE FROM EVENT;

--event 현재 진행중인 이벤트 조회(NULL 은 포함하지 않음)
SELECT EVENT_ID, EVENT_TITLE, TO_CHAR(EVENT_STARTDATE,'YYYY-MM-DD') AS EVENT_STARTDATE, TO_CHAR(NVL(EVENT_ENDDATE,SYSDATE),'YYYY-MM-DD') AS EVENT_ENDDATE 
FROM EVENT WHERE EVENT_ENDDATE >= SYSDATE;
--event 현재 진행중인 이벤트 조회(NULL 은 포함 않음 = NVL SYSDATE 처리)
SELECT EVENT_ID, EVENT_TITLE, EVENT_STARTDATE, EVENT_ENDDATE 
FROM (SELECT EVENT_ID, EVENT_TITLE, TO_CHAR(EVENT_STARTDATE,'YYYY-MM-DD') AS EVENT_STARTDATE, TO_CHAR(NVL(EVENT_ENDDATE,SYSDATE+1),'YYYY-MM-DD') AS EVENT_ENDDATE FROM EVENT)
WHERE EVENT_ENDDATE >= SYSDATE;
--NVL 처리하면 실제 데이터 조회 시 그 데이터 표시가 잘못됨 = NVL 처리에서 SYSDATE+1은 부적합함. 따라서 조회 시 NULL인 것도 함께 출력
SELECT EVENT_ID, EVENT_TITLE, EVENT_STARTDATE, EVENT_ENDDATE
FROM (SELECT EVENT_ID, EVENT_TITLE, TO_CHAR(EVENT_STARTDATE,'YYYY-MM-DD') AS EVENT_STARTDATE, NVL(TO_CHAR(EVENT_ENDDATE,'YYYY-MM-DD'),'진행중') AS EVENT_ENDDATE FROM EVENT)
WHERE EVENT_ENDDATE >= TO_CHAR(SYSDATE,'YYYY-MM-DD') OR EVENT_ENDDATE = '진행중';



--event 현재 종료된 이벤트 조회
SELECT EVENT_ID, EVENT_TITLE, TO_CHAR(EVENT_STARTDATE,'YYYY-MM-DD') AS EVENT_STARTDATE, TO_CHAR(EVENT_ENDDATE,'YYYY-MM-DD') AS EVENT_ENDDATE 
FROM EVENT WHERE EVENT_ENDDATE <= SYSDATE;




--event 상세 이벤트 조회
SELECT EVENT_ID, EVENT_TITLE, TO_CHAR(EVENT_STARTDATE,'YYYY-MM-DD') AS EVENT_STARTDATE, TO_CHAR(EVENT_ENDDATE,'YYYY-MM-DD') AS EVENT_ENDDATE, EVENT_CONTENTS, EVENT_REG_DATE FROM EVENT WHERE EVENT_ID = 3;


--event 삽입
SELECT * FROM EVENT;

INSERT INTO EVENT (EVENT_ID, MANAGER_ID, EVENT_TITLE, EVENT_STARTDATE, EVENT_ENDDATE, EVENT_CONTENTS, EVENT_REG_DATE) 
VALUES(EVENT_ID_SEQ.NEXTVAL, 
'ADMIN1', 
'말이 안나올 땐 손으로 주문하자!', 
'2020/10/16', 
NULL, 
'★써브웨이 앱 가입하면 누릴수 있는 서비스와 혜택!★' || chr(10) ||
'말이 필요없는 FAST-SUB♥' || chr(10) ||
'편하고 빠르게! 앱에서 내 취향대로 주문하고 매장에서 바로 픽업하실 수 있어요!' || chr(10) ||
'이용한 만큼 쌓이는 혜택! POINT♥' || chr(10) ||
'앱 사용이 가능한 서브웨이 매장이라면 어디에서나 !' || chr(10) ||
'내가 결제한 만큼 차곡차곡 쌓이는 포인트 혜택도 누려보세요!',
SYSDATE);

INSERT INTO EVENT (EVENT_ID, MANAGER_ID, EVENT_TITLE, EVENT_STARTDATE, EVENT_ENDDATE, EVENT_CONTENTS, EVENT_REG_DATE) 
VALUES(EVENT_ID_SEQ.NEXTVAL,'ADMIN1','이벤트 제목','2020/10/16','2021/03/26','이벤트내용',SYSDATE);


--EVENT 수정
UPDATE EVENT SET EVENT_TITLE = '이벤트 수정 테스트1', EVENT_STARTDATE = '21/02/23', EVENT_ENDDATE = '21/02/23', EVENT_CONTENTS='이벤트 수정 테스트1', MANAGER_ID = 'ADMIN1' WHERE EVENT_ID = 9;

--EVENT 삭제
SELECT * FROM EVENT;
DELETE FROM EVENT WHERE EVENT_ID = 9;




--주문내역조회(중복제거)
SELECT DISTINCT A.INFO_ORDER_NO AS 주문정보번호 
        ,B.MENU_NM AS 메뉴이름 
        ,D.BUYER_NAME AS 가맹점명 
        ,(B.MENU_PRICE * A.INFO_CART_QTY) AS 총주문금액 
        ,TO_CHAR(C.ORDER_MEMBER_DATE,'YYYY-MM-DD')  AS 고객주문날짜
        ,A.INFO_CART_QTY AS 주문수량 
FROM INFO_ORDER A INNER JOIN MENU B ON(A.MENU_NO_SEQ = B.MENU_NO_SEQ) 
INNER JOIN ORDERS C ON(A.ORDER_NO = C.ORDER_NO) 
INNER JOIN BUYER D ON(C.BUYER_ID = D.BUYER_ID) 
INNER JOIN ADD_INGR E ON (A.INFO_ORDER_NO = E.INFO_ORDER_NO) 
INNER JOIN INGR F ON(E.INGR_NO = F.INGR_NO) 
WHERE C.MEM_ID = 'DEMOMEMBER1';


--가맹점 조회
SELECT BUYER_ID, BUYER_NAME, BUYER_COMTEL, BUYER_ZIP, BUYER_ADD FROM BUYER;

-- 가맹점 삭제
DELETE FROM BUYER WHERE BUYER_ID = 'subway2';

select * from buyer;